package components

import (
	"fmt"
	"path/filepath"
	"strings"
	"log"
)

// transform an input image `src` path from something like a `jpg` or `png` into
// the supplied `ft`, like a `webp` or `avif`
func transformSrc(src, ft string) string {
	srcWithoutSuffix, ok := strings.CutSuffix(src, filepath.Ext(src))
	if !ok {
		log.Fatalf("Couldn't transform %s img with filetype of %s", src, ft)
	}
	return fmt.Sprintf("%s.%s", srcWithoutSuffix, ft)
}

// if you aren't utilizing parcel's image processing, you can use this image
// component to render an image
templ RawImg(src, width, height string, attrs templ.Attributes) {
	<picture>
		for _, ft := range []string{ "avif", "webp" } {
			<source
				srcset={ transformSrc(src, ft) }
				type={ fmt.Sprintf("image/%s", ft) }
				width={ width }
				height={ height }
			/>
		}
		<img
			src={ src }
			width={ width }
			height={ height }
			alt={ defaultStrAttr(attrs["alt"], "") }
			loading={ defaultStrAttr(attrs["loading"], "lazy") }
			decoding={ defaultStrAttr(attrs["decoding"], "async") }
			{ attrs... }
		/>
	</picture>
}
