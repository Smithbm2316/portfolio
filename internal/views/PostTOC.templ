package views

import (
	"strings"
	"bensmith.sh/internal/models"
)

templ PostTOC(headings []models.Heading, attrs templ.Attributes) {
	<post-toc { attrs... }>
		<details>
			<summary id="article-toc-heading">
				Table of Contents
			</summary>
			if len(headings) > 0 {
				<ul webc:if="headings.length > 0">
					<li>
						<a href="#top">Return to top</a>
					</li>
					for _, heading := range headings {
						<li>
							<a href={ templ.SafeURL("#" + Slugify(heading.Text)) }>{ heading.Text }</a>
						</li>
					}
				</ul>
			}
		</details>
		<style>
      @scope {
        details {
          cursor: pointer;
        }
      }
    </style>
		@postTOCWebComponent()
	</post-toc>
}

func Slugify(text string) string {
	return strings.ReplaceAll(strings.ToLower(text), " ", "")
}

templ postTOCWebComponent() {
	<script defer>
    window.customElements.define(
      'post-toc',
      class PostTOCElement extends HTMLElement {
        /**
         * If we are on our full-size layout, then we want to auto-expand the <details> element on page load so that the table of contents is easy to see. If we are on mobile and in a single-column view, we will keep the default <details> behavior of having the table of contents collapsed.
         */
        autoExpandOnDesktop() {
          if (window.innerWidth < 540) {
            return;
          }
          let detailsElement = this.querySelector(':scope details');
          if (!detailsElement) {
            return;
          }
          detailsElement.open = true;
        }

        connectedCallback() {
          this.autoExpandOnDesktop();
        }
      }
    );
  </script>
}
