<script webc:type='js'>
  const z = require('zod');
  let result = z.string().min(1).safeParse(currentUrl);
  if (!result.success) {
    throw new Error('`current-url` is a required prop for <post-toc>.')
  }
  '';
</script>

<script webc:setup>
  let links = [
    { url: '/', text: 'Ben Smith' },
    { url: '/projects/', text: 'Projects' },
    { url: '/words/', text: 'Writing' },
    { url: '/words/feed/', text: 'RSS' },
  ];
</script>

<header webc:root="override" class='main-nav'>
  <nav aria-label="Primary navigation">
    <ul>
      <li webc:for="link of links">
        <a
          :aria-current="currentUrl === link.url ? 'page' : undefined"
          :href="link.url"
          @text="link.text"
        ></a>
      </li>
    </ul>
  </nav>
</header>


<style>
  .main-nav {
    ul {
      display: flex;
      flex-direction: column;
      row-gap: 0.5em;
      column-gap: 1em;
    }

    /* main link list item */
    & li:first-of-type {
      line-height: 1;
      font-size: var(--font-size-lg);
      font-family: var(--font-family-serif);

      a {
        color: var(--color-secondary);
      }
      a:is(:hover, :active) {
        color: var(--color-primary);
      }
    }
    /* current page should have a heavier font weight, so long as it's not the homepage */
    & a[aria-current="page"]:not([href="/"]) {
      font-weight: 700;
    }

    & a {
      text-transform: lowercase;
      text-decoration-line: none;
    }

    & a:is(:hover, :active, :focus-visible) {
      text-decoration-line: underline;
    }
  }

  /*
   * calc(var(--content) + var(--sidebar) + var(--gap-col))
   * layout should have the left-aligned sidebar for these styles
   */
  @container layout (width > 84ch) {
    .main-nav {
      position: sticky;
      top: var(--viewport-padding);
    }
  }

  /*
   * calc(var(--content) + var(--sidebar) + var(--gap-col))
   * layout should be single column for these styles
   */
  @container layout (width <= 84ch) {
    .main-nav {
      flex-basis: min(100%, var(--content));
      max-width: var(--content);
      margin-inline: auto;

      & ul {
        flex-direction: row;
        flex-wrap: wrap;
      }

      & li:first-of-type {
        flex-basis: 100%;
      }
    }
  }
</style>
