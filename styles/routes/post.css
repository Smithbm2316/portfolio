body {
  --gutter: 2.5rem;
  --content: 35rem;
  --sidebar: 15rem;
}

article h1 {
  margin-block-start: 0;
}

.with-sidebar {
  padding: calc(var(--gutter) / 2);
}

/* calc(var(--content) + (var(--gutter) * 2)) */
@media screen and (width >= 40rem) {
  .with-sidebar {
    display: flex;
    flex-wrap: wrap;
    gap: var(--gutter);
    padding: var(--gutter);
  }

  .with-sidebar > :first-child {
    flex-basis: var(--sidebar);
    flex-grow: 1;
  }

  .with-sidebar > :last-child {
    flex-basis: 0;
    flex-grow: 999;
    min-inline-size: var(--content);
  }

  article {
    max-width: var(--content);
  }

  .article-container {
    container-name: article;
    container-type: inline-size;
    display: flex;
    justify-content: center;
  }
}

/* calc(var(--content) + var(--sidebar) + var(--gutter)) */
@container article (width >= 52.5rem) {
  article {
    display: grid;
    gap: var(--gutter);
    /*
     * keep the first column as an auto-sizing (will contract as page shrinks since it
     * has no inherit content as an empty element) acting as an auto-sizing margin-left
     * to the rest of the grid
     */
    grid-template-columns:
      minmax(auto, calc(var(--sidebar) / 2)) minmax(auto, var(--content)) var(--sidebar);
    max-width: max-content;
  }

  header,
  main {
    grid-column: 2;
  }

  post-toc {
    grid-column: 3;
    grid-row: 2;
  }
}

post-toc details {
  cursor: pointer;
}

pre {
  font-size: var(--fs-sm);
}
